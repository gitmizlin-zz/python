#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""                                               
test

"""
# 1. Integers, strings, floats and basic arithmetics

# Exercise 1.1
numOne = 56
numTwo = 33
result1 = numOne + numTwo
print(result1)

# Exercise 1.2
numThree = 17
numFour = 18
result2 = numFour - numThree
print(result2)

# Exercise 1.3
result3 = numOne * numThree
print(result3)

# Exercise 1.4
result4 = 30 / 5
print(result4)

# Exercise 1.5
floatOne = 33.3
floatTwo = 92.08
result5 = round(floatOne + floatTwo, 2)
print(result5)

# Exercise 1.6
result6 = round(floatOne - floatTwo, 2)
print(result6)

# Exercise 1.7
result7 = round(floatOne * floatTwo, 4)
print(result7)

# Exercise 1.8
n1 = 386
n2 = 302
n3 = 68
result8 = n1 + n2
result8 = result8 - n3
print(result8)

# Exercise 1.9
result9 = 443 % 21
print(result9)

# Exercise 1.10
result10 = 'icecream' + 'storage' 
print(result10)

# 2. Conditions, exceptions, booleans, if, else and elif

# Exercise 2.1
print(bool(123 < 33))

# Exercise 2.2
print(bool(430 > 254))

# Exercise 2.3
print(bool(124 == 430))

# Exercise 2.4
d1 = 2
d2 = 6
d3 = 2
dlist = [d1, d2, d3]
print(sum(dlist))

# Exercise 2.5
totalDiceValue = 3
if totalDiceValue >= 11:
	print 'big'
else:
	print 'nothing'

# Exercise 2.6
diceValue1 = 6
diceValue2 = 2
diceValue3 = 4
if diceValue1 == diceValue2 == diceValue3:
	print 'triple'
elif diceValue1 + diceValue2 + diceValue3 >= 11:
	print 'big'
else:
	print 'small'

# 3. Built-in functions

# Exercise 3.1
result11 = max(6,8,95,2,12,152,4,78,621,45)
print(result11)

# Exercise 3.2
result12 = min(6,8,95,2,12,152,4,78,621,45)
print(result12)

# Exercise 3.3
result13 = len('memory')
print(result13)

# Exercise 3.4
result14 = 'memory' + str(65)
print(result14)

# Exercise 3.5
text = int(677.31)
text = str(text)
result15 = text + 'memory'
print(result15)

# 4. Functions

# Exercise 4.1
# Create a function called 'prodNr' that takes two arguments, 31 and 65. The function should return the product of the numbers. Answer with a call to the function.
def prodNr(a, b):
	return a * b
print prodNr(31, 65)

# Exercise 4.2
# Create a function called 'funnyWord' that takes one argument and adds it to the string ' is a funny word'. If the argument is 'water', the function should return: 'water is a funny word'. Use the argument 'resort' and answer with a call to the function.
def funnyWord(a):
	return a + ' is a funny word'
print funnyWord('resort')

# Exercise 4.3
# Create a function called 'inRange' that takes one argument. The function should return 'true' if the argument is higher than 50 and lower than 100. If the number is out of range, the function should return 'false'. The return type should be boolean. Use the argument 18 and answer with a call to the function.

def inRange(a):
	if(50 < a < 100):
		return True
	else:
		return False
print inRange(18)

# 5. Iteration and loops

# Exercise 5.1
# Create a while-loop that adds 3 to the number 46, 40 times. Answer with the result.
count = 0
Number = 46
while count < 40:
	Number = Number + 3
	count = count + 1
print Number

# Exercise 5.2
# Create a while-loop that subtracts 9 from 40, 71 times. Answer with the result.
count = 0
Number = 40
while count < 71:
	Number = Number - 9
	count = count + 1
print Number

# Exercise 5.3
# Create a for-loop that counts the number of elements in the serie: 6,8,95,2,12,152,4,78,621,45. Answer with the result.
count = 0
for itervar in [6,8,95,2,12,152,4,78,621,45]:
    count = count + 1
print 'Count: ', count

# Exercise  5.4
# Create a for-loop that sums up the numbers in the serie: 67,2,12,28,128,15,90,4,579,450. Answer with the result.
theSum = 0
for i in [67,2,12,28,128,15,90,4,579,450]:
	theSum = theSum + i
print theSum


def sum(x, y):
	return x+y
theSum = reduce(sum, [67,2,12,28,128,15,90,4,579,450], 0);
print theSum


0 1 1 2 3 5 8 13 21 34 55

let masdasd = 5;

last = 1;
lastLast = 1;
while (true) {
	newNumber = last + lastLast;
	lastLast = last
	last = newNumber
	echo newNumber;
}

function sum(a, b) {
	
}





Exercise 5.5

Create a for-loop that finds the largest number in the serie: 6,8,95,2,12,152,4,78,621,45. Answer with the result.

Exercise 5.6

Create a for-loop that goes through the numbers: 67,2,12,28,128,15,90,4,579,450. If the current number is even, you should add it to a variable and if the current number is odd, you should subtract it from the variable. Answer with the final result.

